param (
    [string]$inputPath,
    [string]$outputPath,
    [string]$userName,
    [string]$feeScheduleId
)

$excel = New-Object -ComObject Excel.Application
$excel.Visible = $false
$excel.DisplayAlerts = $false

$workbook = $excel.Workbooks.Open($inputPath)

# Set cell values (e.g., B2 = username, B3 = current date, B4 = fee schedule ID)
$sheet = $workbook.Sheets.Item(1)
$sheet.Range("B2").Value2 = $userName
$sheet.Range("B3").Value2 = Get-Date -Format "MM/dd/yyyy"
$sheet.Range("B4").Value2 = $feeScheduleId

# Trigger RefreshAll
$workbook.RefreshAll()

# Wait for refresh to complete
Start-Sleep -Seconds 5

# Save as new file
$workbook.SaveAs($outputPath)

# Close and clean up
$workbook.Close($false)
$excel.Quit()
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($sheet) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($workbook) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($excel) | Out-Null
[GC]::Collect()
[GC]::WaitForPendingFinalizers()

**********************************************

public void runExcelMacroSilently(String inputPath, String outputPath, String userName, String feeScheduleId) {
    List<String> command = List.of(
        "powershell.exe", "-ExecutionPolicy", "Bypass", "-File",
        "C:\\Users\\rajas\\Desktop\\Scripts\\runExcelAutomation.ps1",
        inputPath, outputPath, userName, feeScheduleId
    );

    try {
        ProcessBuilder builder = new ProcessBuilder(command);
        builder.redirectErrorStream(true);
        Process process = builder.start();
        int exitCode = process.waitFor();
        if (exitCode != 0) {
            System.err.println("PowerShell script failed.");
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
